name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 当推送带有 v 开头的标签时触发工作流

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12  # 可以根据需要调整 Python 版本

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 pyinstaller

      - name: Package with PyInstaller
        shell: bash
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            pyinstaller --onefile your_script.py
          else
            pyinstaller --onefile --noconsole your_script.py
          fi

      - name: Package output
        shell: bash
        run: |
          mkdir -p dist
          if [ "${{ runner.os }}" == "Windows" ]; then
            cp dist/your_script.exe dist/your_script-${{ runner.os }}.exe
          elif [ "${{ runner.os }}" == "macOS" ]; then
            cp dist/your_script dist/your_script-${{ runner.os }}
            chmod +x dist/your_script-${{ runner.os }}
          else
            cp dist/your_script dist/your_script-${{ runner.os }}
            chmod +x dist/your_script-${{ runner.os }}
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4  # 更新到 v4 版本
        with:
          name: executable-${{ runner.os }}
          path: dist/your_script-${{ runner.os }}*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4  # 更新到 v4 版本
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/executable-*/your_script-*
          asset_name: your_script-${{ matrix.os }}
          asset_content_type: application/octet-stream